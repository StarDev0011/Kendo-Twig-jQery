/*
 * Copyright © 2022 Anthony Software Group, LLC • All Rights Reserved
 */

const app = require('../app'),
  debug = require('debug')('njcdd.web:server'),
  http = require('http'),
  config = require('config'),
  logger = require('../controller/logger');

let port = normalizePort(process.env.NJCDD_WEB_PORT || config.app.port);
app.set('port', port);

let server = http.createServer(app);

server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

function normalizePort(val) {
  let port = parseInt(val, 10);

  if(isNaN(port)) {
    // named pipe
    return val;
  }

  if(port >= 0) {
    // port number
    return port;
  }

  return false;
}

function onError(error) {
  if(error.syscall !== 'listen') {
    throw error;
  }

  let bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  // handle specific listen errors with friendly messages
  switch(error.code) {
  case 'EACCES':
    logger.error(bind + ' requires elevated privileges');
    process.exit(1);
    break;
  case 'EADDRINUSE':
    logger.error(bind + ' is already in use');
    process.exit(1);
    break;
  default:
    throw error;
  }
}

function onListening() {
  let addr = server.address();
  let bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  let msg = `Listening on ${addr}:${bind}`;
  debug(msg);
  logger.info({message: msg});
}
